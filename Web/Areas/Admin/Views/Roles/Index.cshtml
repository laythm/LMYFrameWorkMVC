@model LMYFrameWorkMVC.Common.Models.Common.BaseModel
 
@using LMYFrameWorkMVC.Web.CommonCode
@{
    ViewBag.Title = Resources.SiteMapLocalizations.RolesList;
    Layout = "~/Areas/Admin/Views/Shared/_Layout.cshtml";
}
<div id="alertsContainer">
    @Html.Partial("~/Areas/Admin/Views/Shared/_Alerts.cshtml", Model)
</div>

<div class="col-md-12" id="container">

    <div class="portlet light bordered">
        <div class="portlet-title">
            <div class="caption font-dark">

                <span class="caption-subject bold uppercase">@Resources.SiteMapLocalizations.RolesList</span>
            </div>

            <div>
                <div class="btn-group pull-right" id="tools">
                    @if (User.HasAccessToNode(Url.Action("RolesList-Create", "Roles")))
                    {
                        <a class="dt-button btn blue btn-outline" href="@Url.Action("RolesList-Create", "Roles")">@Resources.Resources.Create</a>
                    }
                </div>
            </div>
        </div>
        <div class="portlet-body">
            <table class="table table-striped table-bordered table-hover table-checkable order-column dt-responsive" width="100%" id="dynamic-table">
                <thead>
                    <tr>
                        <th width="90%">@Html.DisplayNameFor(model => model.Name) </th>
                        <th width="10%">@Resources.Resources.Actions</th>
                    </tr>
                </thead>

            </table>
        </div>
    </div>

</div>
<script type="text/javascript">
    $(document).ready(function () {
        //initiate dataTables plugin
        var dataTableWrapper = new LMYFrameWork.DataTableWrapper();

        dataTableWrapper.initServerSide({
            buttonsContainer: "#tools",
            container: "#container",
            alertsContainer: "#alertsContainer",
            url: '@Url.Action("GetRoles", "Roles")',
            data: function (d) {
                return $.extend({}, d, {
                    "CustomSearchObject": null
                });
            },
            table: '#dynamic-table',
            renderComplete: function () {
                $('.modalSuccess').on('success', function () {
                    dataTableWrapper.refreshTable('#dynamic-table');
                })
            },
            @*customButtons: [
                  @if (User.HasAccessToNode(Url.Action("Create", "Roles")))
                    {
                        <text>
                           {
                               className: 'btn blue btn-outline', text: "@Resources.Resources.Create",
                               action: function (e, dt, node, config) {
                                   location.href = "@Url.Action("Create", "Roles")";
                               }
                           }
                        </text>
                    }
            ],*@
            order: [[0, "asc"]],
            columns:
               [
                { "data": "Name" },
                {
                    "data": "Id",
                    exportable: false,
                    sortable: false,
                    "render": function (data, type, row) {
                        var edit = '', deleteurl = '';
                        @if (User.HasAccessToNode(Url.Action("Edit", "Roles"))) {
                            <text>
                        edit = "<a href='@Url.Action("Edit", "Roles")/" + data + "' data-toggle='tooltip' title ='@Resources.Resources.Edit'><i class='fa fa-edit btn btn-xs green' ></i></a>"
                        </text>
                        }

                        @if (User.HasAccessToNode(Url.Action("Delete", "Roles")))
                         {
                            <text>
                        deleteurl = "<a class='modalSuccess'  href='@Url.Action("Delete", "Roles")/" + data + "' data-modal='' data-modalContainer='#container' data-alertsContainer='#alertsContainer'  data-toggle='tooltip' title ='@Resources.Resources.Delete'><i class='fa fa-close btn btn-xs red' ></i></a>"
                        </text>
                         }
                        return "<div class='btn-group'>" + edit + deleteurl + "</div>";
                    },
                }
               ],
        }
    );
    });
</script>
