@model LMYFrameWorkMVC.Common.Models.Modules.Admin.Truck.TruckModel

@{
    ViewBag.Title = Resources.SiteMapLocalizations.Edit + " " + Resources.SiteMapLocalizations.Truck;
    ViewBag.modalID = Guid.NewGuid().ToString();
    Layout = "~/Areas/Admin/Views/Shared/_ModalLayout.cshtml";
}
<div id="subAlertsContainer">
    @Html.Partial("~/Areas/Admin/Views/Shared/_Alerts.cshtml", Model)
</div>
<div data-hassuccess="@Json.Encode(@Model.HasSuccess(LMYFrameWorkMVC.Common.LookUps.SuccessType.Full))" data-hidemodal="false"></div>

@if (!Model.HasErrorByType(LMYFrameWorkMVC.Common.LookUps.ErrorType.Critical))
{
    @Html.HiddenFor(model => model.Id)

    <div class="row" id="subContainer">
        <div class="col-md-12">
            <div class="portlet light bordered">
                @*<div class="portlet-title">
                        <div class="caption font-dark">

                            <span class="caption-subject bold uppercase">@Resources.Resources.Create</span>
                        </div>

                        <div>
                            <div class="btn-group pull-right tools" id="#tools">


                            </div>
                        </div>
                    </div>*@
                <div class="portlet-body">

                    @using (Html.BeginForm(null, null, new { }, FormMethod.Post, new { data_ajaxSubmit = "true" }))
                {
                        @Html.AntiForgeryToken()

                        <div class="form-horizontal">
                            <div class="form-group">
                                @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-3" })
                                <div class="col-md-9">
                                    @Html.TextBoxFor(model => model.Name, htmlAttributes: new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.OnBuyPrice, htmlAttributes: new { @class = "control-label col-md-3" })
                                <div class="col-md-9">
                                    @Html.TextBoxFor(model => model.OnBuyPrice, htmlAttributes: new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.OnBuyPrice, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.OnBuyExpenses, htmlAttributes: new { @class = "control-label col-md-3" })
                                <div class="col-md-9">
                                    @Html.TextBoxFor(model => model.OnBuyExpenses, htmlAttributes: new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.OnBuyExpenses, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.OnBuyDateString, htmlAttributes: new { @class = "control-label col-md-3" })
                                <div class="col-md-9">
                                    <div class="input-group">
                                        @Html.TextBoxFor(model => model.OnBuyDateString, htmlAttributes: new { @class = "form-control datePicker" })
                                        <span class="input-group-btn">
                                            <button class="btn default" type="button" onclick="$('#@Html.IdFor(model=>model.OnBuyDateString)').keydown();">
                                                <i class="fa fa-calendar"></i>
                                            </button>
                                        </span>
                                    </div>
                                    @Html.ValidationMessageFor(model => model.OnBuyDateString, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.OnBuyNotes, htmlAttributes: new { @class = "control-label col-md-3" })
                                <div class="col-md-9">
                                    @Html.TextAreaFor(model => model.OnBuyNotes, htmlAttributes: new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.OnBuyNotes, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.OnBuyMilage, htmlAttributes: new { @class = "control-label col-md-3" })
                                <div class="col-md-9">
                                    @Html.TextBoxFor(model => model.OnBuyMilage, htmlAttributes: new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.OnBuyMilage, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.DriverId, htmlAttributes: new { @class = "control-label col-md-3" })
                                <div class="col-md-9">
                                    @Html.HiddenFor(model => model.DriverModel.Name, new { @data_disableValidation = "true" })
                                    @Html.DropDownListFor(model => model.DriverId, Enumerable.Empty<SelectListItem>(), " ",
                                           htmlAttributes: new
                                           {
                                               @class = "form-control select2",
                                               @data_url = Url.Action("TruckCreate-GetDriversBySelect2Parameters", "Driver"),
                                               @data_container = "#subContainer",
                                               @data_alertsContainer = "#subAlertsContainer",
                                               @data_val_prop = "Id",
                                               @data_text_prop = "Name",
                                               @data_selected_text = Model.DriverModel.Name,
                                               @data_selected_val = Model.DriverId,
                                               @data_save_text_in = Html.IdFor(model => model.DriverModel.Name),
                                           })

                                    @Html.ValidationMessageFor(model => model.DriverId, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.Notes, htmlAttributes: new { @class = "control-label col-md-3" })
                                <div class="col-md-9">
                                    @Html.TextAreaFor(model => model.Notes, htmlAttributes: new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.Notes, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group ">
                                <div class="col-md-12">
                                    <div class="pull-right">
                                        <button type="button" class="btn btn-default" data-dismiss="modal">@Resources.Resources.Close</button>
                                        <input type="submit" value="@Resources.Resources.Save" class="btn btn-info" />
                                    </div>
                                </div>
                            </div>

                        </div>
                    }

                </div>
            </div>
        </div>
    </div>
}