@model LMYFrameWorkMVC.Common.Models.Modules.Admin.Administration.User.UserModel

@{
    ViewBag.Title = Resources.SiteMapLocalizations.Delete + " " + Resources.SiteMapLocalizations.User;
    ViewBag.modalID = Guid.NewGuid().ToString();
    Layout = "~/Areas/Admin/Views/Shared/_ModalLayout.cshtml";
}
<div id="alertsContainer">
    @Html.Partial("~/Areas/Admin/Views/Shared/_Alerts.cshtml", Model)
</div>
 
@*<div data-hassuccess="@Json.Encode(@Model.HasSuccess(LMYFrameWorkMVC.Common.LookUps.SuccessType.Full))" data-hidemodal="false" data-successjson="@Json.Encode(Model)"></div>*@
 

<div data-hassuccess="@Json.Encode(@Model.HasSuccess(LMYFrameWorkMVC.Common.LookUps.SuccessType.Full))" data-hidemodal="false"  ></div>

@if (!Model.HasErrorByType(LMYFrameWorkMVC.Common.LookUps.ErrorType.Critical) && !Model.HasSuccess(LMYFrameWorkMVC.Common.LookUps.SuccessType.Full))
{
    <div class="row">
        <div class="col-md-12">
            <div class="portlet light bordered">
                @*<div class="portlet-title">
                        <div class="caption font-dark">

                            <span class="caption-subject bold uppercase">@Resources.Delete   @Model.Name</span>
                        </div>

                        <div>
                            <div class="btn-group pull-right tools" id="#tools">


                            </div>
                        </div>
                    </div>*@
                <div class="portlet-body">
                    <div class="form-horizontal">
                        <div class="form-group">
                            @Html.LabelFor(model => model.UserName, htmlAttributes: new { @class = "control-label col-md-3" })
                            <div class="col-md-9">
                                @Html.TextBoxFor(model => model.UserName, new { @class = " form-control", @readonly = "readonly" })

                            </div>
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(model => model.EnglishName, htmlAttributes: new { @class = "control-label col-md-3" })
                            <div class="col-md-9">
                                @Html.TextBoxFor(model => model.EnglishName, new { @class = "form-control", @readonly = "readonly" })

                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.ArabicName, htmlAttributes: new { @class = "control-label col-md-3" })
                            <div class="col-md-9">
                                @Html.TextBoxFor(model => model.ArabicName, new { @class = "form-control", @readonly = "readonly" })

                            </div>
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-3" })
                            <div class="col-md-9">
                                @Html.TextBoxFor(model => model.Email, new { @class = "form-control", @readonly = "readonly" })

                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.PhoneNumber, htmlAttributes: new { @class = "control-label col-md-3" })
                            <div class="col-md-9">
                                @Html.TextBoxFor(model => model.PhoneNumber, new { @class = "form-control", @readonly = "readonly" })

                            </div>
                        </div>
 
                        <div class="form-group">
                            @Html.LabelFor(model => model.RolesIDs, htmlAttributes: new { @class = "control-label col-md-3" })
                            <div class="col-md-9">
                                <ul>
                                    @foreach (var item in Model.AspNetRolesListModel)
                                    {
                                    <li>@item.Name</li>
                                    }
                                </ul>

                            </div>
                        </div>

                        <div class="form-group ">
                            <div class="col-md-12">
                                <div class="pull-right">

                                    @using (Html.BeginForm(null, null, new { }, FormMethod.Post, new { data_ajaxSubmit = "true" }))
                                    {
                                    @Html.AntiForgeryToken()
                                    @Html.HiddenFor(model => model.Id)
                                    <button type="button" class="btn btn-default" data-dismiss="modal">@Resources.Resources.Close</button>
                                    <input type="submit" value="@Resources.Resources.Delete" class="btn btn-danger" />
                                    }
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
}
    @*<div class="col-md-12">
            @if (!Model.HasErrorByType(LMYFrameWorkMVC.Common.LookUps.ErrorType.Critical) && !Model.HasSuccess(LMYFrameWorkMVC.Common.LookUps.SuccessType.Full))
            {
                <h4>@Resources.AreYouSureYouWantToDeleteThis</h4>
                <div>
                    <dl class="dl-horizontal">

                        <dt>
                            @Html.DisplayNameFor(model => model.UserName)
                        </dt>

                        <dd>
                            @Html.DisplayFor(model => model.UserName)
                        </dd>

                        <dt>
                            @Html.DisplayNameFor(model => model.EnglishName)
                        </dt>

                        <dd>
                            @Html.DisplayFor(model => model.EnglishName)
                        </dd>

                        <dt>
                            @Html.DisplayNameFor(model => model.ArabicName)
                        </dt>

                        <dd>
                            @Html.DisplayFor(model => model.ArabicName)
                        </dd>

                        <dt>
                            @Html.DisplayNameFor(model => model.Email)
                        </dt>

                        <dd>
                            @Html.DisplayFor(model => model.Email)
                        </dd>

                        <dt>
                            @Html.DisplayNameFor(model => model.PhoneNumber)
                        </dt>

                        <dd>
                            @Html.DisplayFor(model => model.PhoneNumber)
                        </dd>

                    </dl>
                    <hr />
                    <div class="pull-right">
                        @using (Html.BeginForm())
                        {
                        @Html.AntiForgeryToken()
                        @Html.HiddenFor(model => model.Id)
                        <button type="button" class="btn btn-default" data-dismiss="modal">@Resources.Close</button>
                        <input type="submit" value="@Resources.Delete" class="btn btn-danger" />
                        }
                    </div>
                </div>
            }
            else
            {
                <div class="pull-right" data-successjson='@Html.Raw(Json.Encode(Model))'>
                    <button type="button" class="btn btn-default" data-dismiss="modal">@Resources.Close</button>
                </div>
            }
        </div>*@
