@model LMYFrameWorkMVC.Common.Models.Common.BaseModel
@{
    string containerID = "container_" + ViewBag.modalID;
}

@using LMYFrameWorkMVC.Common.Resources

<div class="modal fade in" id="@ViewBag.modalID" data-container="#@containerID" data-alerstdivid="modalalertsContainer_@ViewBag.modalID">
    <div class="modal-dialog" id="@containerID" style="width:@ViewBag.Width">
        <div class="modal-content">
            @RenderSection("HeadCss", false)
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-hidden="true">×</button>
                <h4 class="modal-title">@ViewBag.Title</h4>
            </div>
            <div class="modal-body">
                @RenderBody()
            </div>
        </div><!-- /.modal-content -->
    </div><!-- /.modal-dialog -->

    <script type="text/javascript">
          window['ModalConstants_@ViewBag.modalID'] = {
            alertOnExit: @Json.Encode(ViewBag.alertOnExit),
            refreshModalOnClose : @Json.Encode(ViewBag.refreshOnClose),
        }

         ///////////////////////////////////modal original events//////////////////////////////////
        $($("#@ViewBag.modalID")).on('shown.bs.modal', function () {
            $(this).trigger('LMYFrameWorkModal.show');
        });

        $($("#@ViewBag.modalID")).on('hidden.bs.modal', function () {
            $(this).trigger('LMYFrameWorkModal.hide');

            var noRemoveOnHide = !@Json.Encode(ViewBag.noRemoveOnHide);
            if (noRemoveOnHide) {
                //this code is to not fill the page with huge html since for each modal there is a html
                $(this).data('bs.modal', null);
                $(this).remove();
            }
        });

        $($("#@ViewBag.modalID")).on('hide.bs.modal', function (e) {
            if (window['ModalConstants_@ViewBag.modalID'].alertOnExit) {
                e.preventDefault();
                e.stopPropagation();
                var result = confirm("Press a button!");
                if (result) {
                    window['ModalConstants_@ViewBag.modalID'].alertOnExit = false;
                    LMYFrameWork.CommonMethods.alertOnExit(false);
                    $(this).modal('hide');
                }
            }
        });
        $("#@ViewBag.modalID").modal({
            backdrop: 'static',
            keyboard: true
        }, 'show');

        function hideModal(modelElement) {
            $(modelElement).modal('hide');
        }
         ///////////////////////////////////modal original events//////////////////////////////////


        $(document).ready(function () {
            var commonWrapper = new LMYFrameWork.CommonWrapper();

            commonWrapper.init('#@ViewBag.modalID');
            if (window['ModalConstants_@ViewBag.modalID'].alertOnExit) {
                LMYFrameWork.CommonMethods.alertOnExit(true);
            }
        });

        //to solve issue of submit only assigned to shown div ,and validation is assigned only to shown div
        $('#@ViewBag.modalID').on('LMYFrameWorkModal.show', function () {

        });

        $('#@ViewBag.modalID').on('LMYFrameWorkModal.hide', function () {
            hideModal(this);

            if (window['ModalConstants_@ViewBag.modalID'].refreshModalOnClose) {
                 document.location.reload();
            }
    });
    </script>
</div><!-- /.modal -->
