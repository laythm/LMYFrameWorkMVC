@model LMYFrameWorkMVC.Common.Models.Modules.Admin.Administration.Setting.SettingModel
@using LMYFrameWorkMVC.Web.CommonCode
@{
    ViewBag.Title = Resources.SiteMapLocalizations.SettingsList;
    Layout = "~/Areas/Admin/Views/Shared/_Layout.cshtml";
}
<div id="alertsContainer">
    @Html.Partial("~/Areas/Admin/Views/Shared/_Alerts.cshtml", Model)
</div>
<div class="col-md-12" id="container">

    <div class="portlet light bordered">
        <div class="portlet-title">
            <div class="caption font-dark">

                <span class="caption-subject bold uppercase">@Resources.SiteMapLocalizations.SettingsList</span>
            </div>

            <div>
                <div class="btn-group pull-right" id="tools">

                    @*<a class="dt-button btn blue btn-outline" href="@Url.Action("Create","User")">@Resources.Create</a>*@
                </div>
            </div>
        </div>
        <div class="portlet-body">
            <table class="table table-striped table-bordered table-hover table-checkable order-column dt-responsive" width="100%" id="dynamic-table">
                <thead>
                    <tr>
                        <th width="45%">@Html.DisplayNameFor(model => model.Name) </th>
                        <th width="45%">@Html.DisplayNameFor(model => model.Value) </th>
                        <th width="10%">@Resources.Resources.Actions</th>
                    </tr>
                </thead>

            </table>
        </div>
    </div>

</div>
<script type="text/javascript">
    $(document).ready(function () {
        //initiate dataTables plugin
        var dataTableWrapper = new LMYFrameWork.DataTableWrapper();

        dataTableWrapper.initServerSide({
            buttonsContainer: "#tools",
            container: "#container",
            alertsContainer: "#alertsContainer",
            url: '@Url.Action("GetSettings", "Settings")',
            data: function (d) {
                return $.extend({}, d, {
                    "CustomSearchObject": null
                });
            },
            table: '#dynamic-table',
            renderComplete: function () {
                $('.modalSuccess').on('success', function () {
                    dataTableWrapper.refreshTable('#dynamic-table');
                })
            },
            order: [[0, "asc" ]],
            columns:
               [
                { "data": "Name" },
                {
                    "data": "DisplayValue",
                    sortable: false,
                    "render": function (data, type, row) {
                        var imgType=@((int)LMYFrameWorkMVC.Common.LookUps.SettingsTypes.image);
                        var imgURl="@Url.Action("GetImage", "Common", new {Area="Common", imageShortPath = "imgshortpath", width = 120, height = 20 })";

                        if (row.Type== imgType)
                            return "<img src='"+imgURl.replace("imgshortpath",data)+"' />";

                        return data;
                    },
                },
                {
                    "data": "Id",
                    exportable: false,
                    sortable: false,
                    "render": function (data, type, row) {
                        var edit = '';
                        @if (User.HasAccessToNode(Url.Action("Edit", "Settings")))
                        {
                        <text>
                        edit = "<a href='@Url.Action("Edit", "Settings")/" + data + "' data-toggle='tooltip' title ='@Resources.Resources.Edit'><i class='fa fa-edit btn btn-xs green' ></i></a>"
                        </text>
                         }
                        return "<div class='btn-group'>" + edit + "</div>";
                    },
                }
               ],
        }
    );
    });
</script>
